@Commands = require './gamecommands'
@Entity = require './entities'
@Model = require './gamemodel'
@Viewer = require './gameviewer'
@Component = require './gamecomponents'
logger = require './logger'
_ = require 'lodash'
me = @

defineEntity = (game, type)->
	game.entityRegistry.addPrototype type

spawnLayoutUnder = (game, layout, parent)->
	_.forEach layout, (val, key)->
		logger.log 'under ' + parent.selector()
		if typeof val == 'function'
			if !game.entityRegistry[val.name]
				defineEntity game, val
			e = me.Commands.handle game,
				_ : ['spawn']
				type : val.name
				name : key
				parent : parent.selector()
		else
			e = me.Commands.handle game,
				_ : ['spawn']
				type : 'container'
				name : key
				parent : parent.selector()
			spawnLayoutUnder game, val, e
			

@spawnLayout = (game, layout)->
	spawnLayoutUnder game, layout, game.root